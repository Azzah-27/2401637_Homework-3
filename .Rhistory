weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Plot for Informative Prior
ggplot(informative_data, aes(x = x, y = y)) +
geom_line(color = "blue", size = 1) +
labs(title = paste("Informative Prior (alpha =", round(alpha_informative, 2), ", beta =", round(beta_informative, 2), ")"),
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
ggplot(informative_data, aes(x = x, y = y)) +
geom_line(color = "blue", size = 1) +
labs(title = paste("Informative Prior",
x = "Marks",
y = "Density") +
theme_minimal()
ggplot(informative_data, aes(x = x, y = y)) +
# Plot for Informative Prior
ggplot(informative_data, aes(x = x, y = y)) +
geom_line(color = "blue", size = 1) +
labs(title = "Informative Prior",
x = "Marks",
y = "Density")
# Plot for Informative Prior
ggplot(informative_data, aes(x = x, y = y)) +
geom_line(color = "blue", size = 1) +
labs(title = "Informative Prior",
x = "Marks",
y = "Density") +
theme_minimal()
# Plot for Informative Prior
ggplot(informative_data, aes(x = x, y = y)) +
geom_path(color = "blue", size = 1) +
labs(title = "Informative Prior",
x = "Marks",
y = "Density") +
theme_minimal()
ggplot(weakly_data, aes(x = x, y = y)) +
geom_path(color = "red", size = 1) +
labs(title = "Weakly-Informative Prior",
x = "Marks ",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
# Function to compute the density for a given alpha and beta
gen_prior_pred <- function(n, alpha_prior, beta_prior) {
x <- seq(0, 1, 0.01)  # Normalized marks in [0, 1]
d <- tibble(n = n, alpha = alpha_prior, beta = beta_prior,
x = x,
y = dbeta(x, alpha_prior, beta_prior))
return(d)
}
# Create informative priors (narrow and specific)
priors_informative <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 67, 5),  # Informative alpha (centered around 67)
beta_prior = rnorm(1, 45, 5)    # Informative beta (centered around 45)
)
# Create weakly informative priors (broad and less specific)
priors_weakly <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rgamma(1, 1, 5),  # Weakly informative alpha (Gamma ensures alpha > 0)
beta_prior = rgamma(1, 1, 5)    # Weakly informative beta (Gamma ensures beta > 0)
)
# Apply function to each prior sample for informative priors
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
# Apply function to each prior sample for weakly informative priors
prior_llh_weakly <- pmap_df(priors_weakly, gen_prior_pred)
# Plot for Informative Priors
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
# Plot for Weakly Informative Priors
ggplot(prior_llh_weakly, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "red") +  # Use red for weakly informative priors
labs(title = "Weakly Informative Priors (Broad and Less Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(purrr)
# Set seed for reproducibility
set.seed(123)
# Function to compute the density for a given alpha and beta
gen_prior_pred <- function(n, alpha_prior, beta_prior) {
x <- seq(0, 1, 0.01)  # Normalized marks in [0, 1]
d <- tibble(n = n, alpha = alpha_prior, beta = beta_prior,
x = x,
y = dbeta(x, alpha_prior, beta_prior))
return(d)
}
# Create informative priors (narrow and specific)
priors_informative <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 67, 5),  # Informative alpha (centered around 67)
beta_prior = rnorm(1, 45, 5)    # Informative beta (centered around 45)
)
# Create weakly informative priors (broad and less specific)
priors_weakly <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 10, 10),  # Weakly informative alpha (broad distribution)
beta_prior = rnorm(1, 10, 10)    # Weakly informative beta (broad distribution)
)
# Apply function to each prior sample for informative priors
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
# Apply function to each prior sample for weakly informative priors
prior_llh_weakly <- pmap_df(priors_weakly, gen_prior_pred)
# Plot for Informative Priors
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
ggplot(prior_llh_weakly, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "red") +  # Use red for weakly informative priors
labs(title = "Weakly Informative Priors (Broad and Less Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
# Function to compute the density for a given alpha and beta
gen_prior_pred <- function(n, alpha_prior, beta_prior) {
x <- seq(0, 1, 0.01)  # Normalized marks in [0, 1]
d <- tibble(n = n, alpha = alpha_prior, beta = beta_prior,
x = x,
y = dbeta(x, alpha_prior, beta_prior))
return(d)
}
# Create informative priors (narrow and specific)
priors_informative <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 67, 5),  # Informative alpha (centered around 67)
beta_prior = rnorm(1, 45, 5)    # Informative beta (centered around 45)
)
# Create weakly informative priors (broad and less specific)
priors_weakly <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 10, 10),  # Weakly informative alpha (broad distribution)
beta_prior = rnorm(1, 10, 10)    # Weakly informative beta (broad distribution)
)
View(priors_informative)
View(priors_weakly)
sim_students <- tibble(marks = rbeta(100, alpha_prior, beta_prior))
gen_prior_pred <- function(n, alpha_prior, beta_prior) {
x <- seq(0, 1, 0.01)  # Normalized marks in [0, 1]
d <- tibble(n = n, alpha = alpha_prior, beta = beta_prior,
x = x,
y = dbeta(x, alpha_prior, beta_prior))
return(d)
}
priors_informative <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 67, 5),  # Informative alpha (centered around 67)
beta_prior = rnorm(1, 45, 5)    # Informative beta (centered around 45)
)
priors_weakly <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 10, 10),  # Weakly informative alpha (broad distribution)
beta_prior = rnorm(1, 10, 10)    # Weakly informative beta (broad distribution)
)
View(priors_weakly)
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
prior_llh_weakly <- pmap_df(priors_weakly, gen_prior_pred)
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
ggplot(prior_llh_weakly, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "red") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
priors_weakly <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 50, 20),  # Weakly informative alpha (broad distribution)
beta_prior = rnorm(1, 40, 20)    # Weakly informative beta (broad distribution)
)
# Apply function to each prior sample for informative priors
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
# Apply function to each prior sample for weakly informative priors
prior_llh_weakly <- pmap_df(priors_weakly, gen_prior_pred)
# Plot for Informative Priors
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
# Plot for Weakly Informative Priors
ggplot(prior_llh_weakly, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "red") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
priors_informative <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 67, 5),  # Informative alpha (centered around 67)
beta_prior = rnorm(1, 55, 5)    # Informative beta (centered around 45)
)
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
priors_informative <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 67, 5),  # Informative alpha (centered around 67)
beta_prior = rnorm(1, 67, 5)    # Informative beta (centered around 45)
)
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
priors_informative <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 67, 5),  # Informative alpha (centered around 67)
beta_prior = rnorm(1, 30 ,3)    # Informative beta (centered around 45)
)
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
priors_informative <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 67, 5),  # Informative alpha (centered around 67)
beta_prior = rnorm(1, 40 ,3)    # Informative beta (centered around 45)
)
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
priors_informative <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 67, 5),  # Informative alpha (centered around 67)
beta_prior = rnorm(1, 50 ,5)    # Informative beta (centered around 45)
)
# Create weakly informative priors (broad and less specific)
priors_weakly <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 50, 20),  # Weakly informative alpha (broad distribution)
beta_prior = rnorm(1, 40, 20)    # Weakly informative beta (broad distribution)
)
# Apply function to each prior sample for informative priors
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
# Apply function to each prior sample for weakly informative priors
prior_llh_weakly <- pmap_df(priors_weakly, gen_prior_pred)
# Plot for Informative Priors
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
priors_informative <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 67, 5),  # Informative alpha (centered around 67)
beta_prior = rnorm(1, 50 ,3)    # Informative beta (centered around 45)
)
# Create weakly informative priors (broad and less specific)
priors_weakly <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 50, 20),  # Weakly informative alpha (broad distribution)
beta_prior = rnorm(1, 40, 20)    # Weakly informative beta (broad distribution)
)
# Apply function to each prior sample for informative priors
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
# Apply function to each prior sample for weakly informative priors
prior_llh_weakly <- pmap_df(priors_weakly, gen_prior_pred)
# Plot for Informative Priors
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
priors_informative <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 67, 5),  # Informative alpha (centered around 67)
beta_prior = rnorm(1, 60 ,5)    # Informative beta (centered around 45)
)
# Create weakly informative priors (broad and less specific)
priors_weakly <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 50, 20),  # Weakly informative alpha (broad distribution)
beta_prior = rnorm(1, 40, 20)    # Weakly informative beta (broad distribution)
)
# Apply function to each prior sample for informative priors
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
# Apply function to each prior sample for weakly informative priors
prior_llh_weakly <- pmap_df(priors_weakly, gen_prior_pred)
# Plot for Informative Priors
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
priors_informative <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 67, 5),  # Informative alpha (centered around 67)
beta_prior = rnorm(1, 55 ,5)    # Informative beta (centered around 45)
)
# Create weakly informative priors (broad and less specific)
priors_weakly <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 50, 20),  # Weakly informative alpha (broad distribution)
beta_prior = rnorm(1, 40, 20)    # Weakly informative beta (broad distribution)
)
# Apply function to each prior sample for informative priors
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
# Apply function to each prior sample for weakly informative priors
prior_llh_weakly <- pmap_df(priors_weakly, gen_prior_pred)
# Plot for Informative Priors
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
priors_informative <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 67, 5),  # Informative alpha (centered around 67)
beta_prior = rnorm(1, 45 ,5)    # Informative beta (centered around 45)
)
# Create weakly informative priors (broad and less specific)
priors_weakly <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 50, 20),  # Weakly informative alpha (broad distribution)
beta_prior = rnorm(1, 40, 20)    # Weakly informative beta (broad distribution)
)
# Apply function to each prior sample for informative priors
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
# Apply function to each prior sample for weakly informative priors
prior_llh_weakly <- pmap_df(priors_weakly, gen_prior_pred)
# Plot for Informative Priors
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
priors_informative <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 67, 5),  # Informative alpha (centered around 67)
beta_prior = rnorm(1, 35 ,5)    # Informative beta (centered around 45)
)
# Create weakly informative priors (broad and less specific)
priors_weakly <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 50, 20),  # Weakly informative alpha (broad distribution)
beta_prior = rnorm(1, 40, 20)    # Weakly informative beta (broad distribution)
)
# Apply function to each prior sample for informative priors
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
# Apply function to each prior sample for weakly informative priors
prior_llh_weakly <- pmap_df(priors_weakly, gen_prior_pred)
# Plot for Informative Priors
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
priors_informative <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 67, 5),  # Informative alpha (centered around 67)
beta_prior = rnorm(1, 37 ,5)    # Informative beta (centered around 45)
)
# Create weakly informative priors (broad and less specific)
priors_weakly <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 50, 20),  # Weakly informative alpha (broad distribution)
beta_prior = rnorm(1, 40, 20)    # Weakly informative beta (broad distribution)
)
# Apply function to each prior sample for informative priors
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
# Apply function to each prior sample for weakly informative priors
prior_llh_weakly <- pmap_df(priors_weakly, gen_prior_pred)
# Plot for Informative Priors
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
priors_weakly <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 50, 20),  # Weakly informative alpha (broad distribution)
beta_prior = rnorm(1, 45, 15)    # Weakly informative beta (broad distribution)
)
# Apply function to each prior sample for informative priors
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
# Apply function to each prior sample for weakly informative priors
prior_llh_weakly <- pmap_df(priors_weakly, gen_prior_pred)
# Plot for Informative Priors
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
# Plot for Weakly Informative Priors
ggplot(prior_llh_weakly, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "red") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
priors_weakly <- tibble(n = 1:50) %>%
group_by(n) %>%
mutate(alpha_prior = rnorm(1, 50, 20),  # Weakly informative alpha (broad distribution)
beta_prior = rnorm(1, 45, 20)    # Weakly informative beta (broad distribution)
)
# Apply function to each prior sample for informative priors
prior_llh_informative <- pmap_df(priors_informative, gen_prior_pred)
# Apply function to each prior sample for weakly informative priors
prior_llh_weakly <- pmap_df(priors_weakly, gen_prior_pred)
# Plot for Informative Priors
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
# Plot for Weakly Informative Priors
ggplot(prior_llh_weakly, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "red") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density")
ggplot(prior_llh_informative, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "blue") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
ggplot(prior_llh_weakly, aes(x, y, group = interaction(alpha, beta))) +
geom_path(alpha = 0.50, color = "red") +  # Use blue for informative priors
labs(title = "Informative Priors (Narrow and Specific)",
x = "Normalized Marks (out of 100)",
y = "Density") +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_minimal()
set.seed(100)
# Simulate marks out of 100 (as an example)
x <- seq(0, 100, by = 1)  # Marks range from 0 to 100
# Rescaling marks to fit into the [0, 1] interval
marks <- x / 100
# The marks are rescaled to the interval [0, 1] by dividing each value by 100.
# This is necessary because the Beta distribution is defined only for values between 0 and 1.
# Define parameters for the Beta distribution
alpha <- 10
beta <- 7
#Here, `alpha = 10` and `beta = 7` are chosen as example values.
# Calculate the probability density function (PDF) for the Beta distribution
y <- dbeta(marks, alpha, beta)  # The result, 'y', represents the probability density at each value of 'marks'
# Create a data frame for plotting
beta_data <- tibble(x = marks, y = y)
# Plot the Beta distribution
ggplot(beta_data, aes(x = marks, y = y)) +
geom_line(color = "red", linewidth = 0.75) +
labs(title = "Example Beta Distribution for Marks") +
theme_minimal()
