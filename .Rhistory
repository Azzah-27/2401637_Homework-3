alpha_inf <- 12
beta_inf <- 8
# Define parameters for weakly-informative prior
alpha_weak <- 1.5
beta_weak <- 1.5
# Calculate densities
y_inf <- dbeta(x, alpha_inf, beta_inf)
y_weak <- dbeta(x, alpha_weak, beta_weak)
# Create data frames for plotting
inf_data <- data.frame(x = x, y = y_inf, Prior = "Informative")
weak_data <- data.frame(x = x, y = y_weak, Prior = "Weakly-Informative")
# Combine data frames
prior_data <- rbind(inf_data, weak_data)
# Plot
ggplot(prior_data, aes(x = x, y = y, color = Prior)) +
geom_line(size = 1) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
set.seed(123)
# Number of simulations
n_sim <- 1000
# Generate prior predictive samples for informative prior
prior_pred_inf <- rbeta(n_sim, alpha_inf, beta_inf)
# Generate prior predictive samples for weakly-informative prior
prior_pred_weak <- rbeta(n_sim, alpha_weak, beta_weak)
# Create data frames for plotting
pred_inf_data <- data.frame(Proportion = prior_pred_inf, Prior = "Informative")
pred_weak_data <- data.frame(Proportion = prior_pred_weak, Prior = "Weakly-Informative")
# Combine data frames
pred_data <- rbind(pred_inf_data, pred_weak_data)
# Plot
ggplot(pred_data, aes(x = Proportion, fill = Prior)) +
geom_histogram(bins = 30, alpha = 0.6, position = "identity") +
labs(title = "Prior Predictive Distributions",
x = "Proportion",
y = "Frequency") +
theme_minimal()
alpha_informative <- as.numeric(12)
beta_informative <- as.numeric(7)
alpha_weakly <- as.numeric(9)
beta_weakly <- as.numeric(5)
beta_data %>%
mutate (informative = dnorm(marks, alpha_informative, beta_informative),
weakly_informative = dnorm(marks, alpha_weakly, beta_weakly)) -> beta_data
View(beta_data)
marks <- seq(0, 1, by = 0.01)
# Define parameters for the Beta distribution
alpha <- as.numeric(13)
beta <- as.numeric(7)
# Calculate the probability density function (PDF) for the Beta distribution
y <- dbeta(marks, alpha, beta)
# Create a data frame for plotting
beta_data <- tibble(x = marks, y = y)
# Plot the Beta distribution
ggplot(beta_data, aes(x = marks, y = y)) +
geom_line(color = "red", linewidth = 1.5)
alpha_informative <- as.numeric(12)
beta_informative <- as.numeric(7)
alpha_weakly <- as.numeric(9)
beta_weakly <- as.numeric(5)
beta_data %>%
mutate (informative = dnorm(marks, alpha_informative, beta_informative),
weakly_informative = dnorm(marks, alpha_weakly, beta_weakly)) -> beta_data
View(beta_data)
ggplot(beta_data, aes(x = marks, y = y)) +
geom_line(color = "red", linewidth = 1.5)
# Define the range of values for marks (0 to 1)
marks <- seq(0, 1, by = 0.01)
# Define parameters for the Beta distribution
alpha <- as.numeric(13)
beta <- as.numeric(7)
# Calculate the probability density function (PDF) for the Beta distribution
y <- dbeta(marks, alpha, beta)
# Create a data frame for plotting
beta_data <- tibble(x = marks, y = y)
# Plot the Beta distribution
ggplot(beta_data, aes(x = marks, y = y)) +
geom_line(color = "red", linewidth = 1.5)
# Defining parameters for informative prior
alpha_informative <- as.numeric(12)
beta_informative <- as.numeric(7)
# Defining parameters for weakly-informative prior
alpha_weakly <- as.numeric(9)
beta_weakly <- as.numeric(5)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
# Create data frames for plotting
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Combine data frames
prior_data <- mutate(informative_data, weakly_data)
# Plot
ggplot(prior_data, aes(x = marks, y = y, color = Prior)) +
geom_line(size = 1) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
# Defining parameters for informative prior
alpha_informative <- as.numeric(12)
beta_informative <- as.numeric(7)
# Defining parameters for weakly-informative prior
alpha_weakly <- as.numeric(9)
beta_weakly <- as.numeric(5)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
# Create data frames for plotting
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Combine data frames
prior_data <- rbind(informative_data, weakly_data)
# Plot
ggplot(prior_data, aes(x = marks, y = y, color = Prior)) +
geom_line(size = 1) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
View(prior_data)
prior_data <- rbind(informative_data, weakly_data)
View(prior_data)
prior_data <- mutate(informative_data, weakly_data)
View(prior_data)
prior_data <- rbind(informative_data, weakly_data)
ggplot(prior_data, aes(x = marks, y = y, color = Prior)) +
geom_line(size = 1) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
# Define the range of values for marks (0 to 1)
marks <- seq(0, 1, by = 0.01)
# Define parameters for the Beta distribution
alpha <- as.numeric(13)
beta <- as.numeric(7)
# Calculate the probability density function (PDF) for the Beta distribution
y <- dbeta(marks, alpha, beta)
# Create a data frame for plotting
beta_data <- tibble(x = marks, y = y)
# Plot the Beta distribution
ggplot(beta_data, aes(x = marks, y = y)) +
geom_line(color = "red", linewidth = 1.5)
#####3.3
# Defining parameters for informative prior
alpha_informative <- as.numeric(12)
beta_informative <- as.numeric(7)
# Defining parameters for weakly-informative prior
alpha_weakly <- as.numeric(9)
beta_weakly <- as.numeric(5)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
# Create data frames for plotting
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Combine data frames
prior_data <- rbind(informative_data, weakly_data)
# Plot
ggplot(prior_data, aes(x = marks, y = y, color = Prior)) +
geom_line(size = 1) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
alpha_inf <- 12
beta_inf <- 8
# Define parameters for weakly-informative prior
alpha_weak <- 1.5
beta_weak <- 1.5
# Calculate densities
y_inf <- dbeta(x, alpha_inf, beta_inf)
alpha_inf <- 12
beta_inf <- 8
# Define parameters for weakly-informative prior
alpha_weak <- 1.5
beta_weak <- 1.5
# Calculate densities
y_inf <- dbeta(marks, alpha_inf, beta_inf)
marks <- seq(0, 1, by = 0.01)
alpha_inf <- 12
beta_inf <- 8
# Define parameters for weakly-informative prior
alpha_weak <- 1.5
beta_weak <- 1.5
# Calculate densities
y_inf <- dbeta(marks, alpha_inf, beta_inf)
y_weak <- dbeta(marks, alpha_weak, beta_weak)
# Create data frames for plotting
inf_data <- data.frame(x = marks, y = y_inf, Prior = "Informative")
weak_data <- data.frame(x = marks, y = y_weak, Prior = "Weakly-Informative")
# Combine data frames
prior_data <- rbind(inf_data, weak_data)
# Plot
ggplot(prior_data, aes(x = marks, y = y, color = Prior)) +
geom_line(size = 1) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
marks <- seq(0, 1, by = 0.01)
alpha_informative <- as.numeric(12)
beta_informative <- as.numeric(7)
alpha_weakly <- as.numeric(9)
beta_weakly <- as.numeric(5)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
View(informative_data)
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
View(weakly_data)
prior_data <- rbind(informative_data, weakly_data)
View(prior_data)
View(prior_data)
ggplot(prior_data, aes(x = marks, y = y, color = Prior)) +
geom_line(size = 1) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
ggplot(prior_data, aes(x = marks, y = y, color = Prior)) +
geom_line( length = 1) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
ggplot(prior_data, aes(x = marks, y = y, color = Prior)) +
geom_line () +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
ggplot(prior_data, aes(x = x, y = y, color = Prior)) +
geom_line () +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
alpha_informative <- as.numeric(12)
beta_informative <- as.numeric(7)
# Defining parameters for weakly-informative prior
alpha_weakly <- as.numeric(1)
beta_weakly <- as.numeric(1)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
# Create data frames for plotting
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Combine data frames
prior_data <- rbind(informative_data, weakly_data)
# Plot
ggplot(prior_data, aes(x = x, y = y, color = Prior)) +
geom_line (size= 1) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
alpha_informative <- as.numeric(12)
beta_informative <- as.numeric(7)
# Defining parameters for weakly-informative prior
alpha_weakly <- as.numeric(3)
beta_weakly <- as.numeric(1)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
# Create data frames for plotting
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Combine data frames
prior_data <- rbind(informative_data, weakly_data)
# Plot
ggplot(prior_data, aes(x = x, y = y, color = Prior)) +
geom_line (size= 1) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
alpha_weakly <- as.numeric(1.5)
beta_weakly <- as.numeric(1.5)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
# Create data frames for plotting
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Combine data frames
prior_data <- rbind(informative_data, weakly_data)
# Plot
ggplot(prior_data, aes(x = x, y = y, color = Prior)) +
geom_line (size= 1) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
ggplot(prior_data, aes(x = x, y = y, color = Prior)) +
geom_line (size= 0.5) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
mu <- rnorm(1, 67, 5)
sigma <- rexp(1, 0.5)
sim_students <- tibble(marks = rnorm(100, mu, sigma))
View(sim_students)
priors <- tibble(n = 1:50) %>% group_by(n) %>%
mutate(mu = rnorm(1, 67, 5), sigma = rexp(1, 0.5))
View(priors)
gen_prior_pred <- function(n, mu, sigma) {
x <- seq(0, 100, 0.1)
d <- tibble(n = n, mu = mu, sigma = sigma,
x = x,
y = dnorm(x, mu, sigma))
return(d)
}
prior_llh <- pmap_df(priors, gen_prior_pred)
ggplot(prior_llh, aes(x, y, group = mu)) +  geom_path(alpha = 0.25)
ggplot(prior_llh, aes(x, y, group = mu)) +  geom_path(alpha = 0.05)
#plotting prior predictions
ggplot(prior_llh, aes(x, y, group = mu)) +  geom_path(alpha = 0.5)
ggplot(prior_llh, aes(x, y, group = mu)) +  geom_path(alpha = 1)
#plotting prior predictions
ggplot(prior_llh, aes(x, y, group = mu)) +  geom_path(alpha = 5)
ggplot(prior_llh, aes(x, y, group = mu)) +  geom_path(alpha = 20)
marks <- seq(0, 1, by = 0.01)
alpha_informative <- as.numeric(12)
beta_informative <- as.numeric(7)
# Defining parameters for weakly-informative prior
alpha_weakly <- as.numeric(5)
beta_weakly <- as.numeric(3)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
# Creating tables for plotting
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Combining data
prior_data <- rbind(informative_data, weakly_data)
# Plotting informative and weakly informative priors
ggplot(prior_data, aes(x = x, y = y, color = Prior)) +
geom_line (size= 0.5) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
alpha_informative <- as.numeric(12)
beta_informative <- as.numeric(7)
# Defining parameters for weakly-informative prior
alpha_weakly <- as.numeric(2)
beta_weakly <- as.numeric(1)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
# Creating tables for plotting
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Combining data
prior_data <- rbind(informative_data, weakly_data)
# Plotting informative and weakly informative priors
ggplot(prior_data, aes(x = x, y = y, color = Prior)) +
geom_line (size= 0.5) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
alpha_informative <- as.numeric(12)
beta_informative <- as.numeric(7)
# Defining parameters for weakly-informative prior
alpha_weakly <- as.numeric(1)
beta_weakly <- as.numeric(1)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
# Creating tables for plotting
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Combining data
prior_data <- rbind(informative_data, weakly_data)
# Plotting informative and weakly informative priors
ggplot(prior_data, aes(x = x, y = y, color = Prior)) +
geom_line (size= 0.5) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
alpha_weakly <- as.numeric(1)
beta_weakly <- as.numeric(2)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
# Creating tables for plotting
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Combining data
prior_data <- rbind(informative_data, weakly_data)
# Plotting informative and weakly informative priors
ggplot(prior_data, aes(x = x, y = y, color = Prior)) +
geom_line (size= 0.5) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
alpha_weakly <- as.numeric(0.5)
beta_weakly <- as.numeric(2)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
# Creating tables for plotting
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Combining data
prior_data <- rbind(informative_data, weakly_data)
# Plotting informative and weakly informative priors
ggplot(prior_data, aes(x = x, y = y, color = Prior)) +
geom_line (size= 0.5) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
alpha_weakly <- as.numeric(0.5)
beta_weakly <- as.numeric(1)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
# Creating tables for plotting
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Combining data
prior_data <- rbind(informative_data, weakly_data)
# Plotting informative and weakly informative priors
ggplot(prior_data, aes(x = x, y = y, color = Prior)) +
geom_line (size= 0.5) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
alpha_weakly <- as.numeric(1.5)
beta_weakly <- as.numeric(1.5)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
# Creating tables for plotting
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Combining data
prior_data <- rbind(informative_data, weakly_data)
# Plotting informative and weakly informative priors
ggplot(prior_data, aes(x = x, y = y, color = Prior)) +
geom_line (size= 0.5) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
alpha_weakly <- as.numeric(1.75)
beta_weakly <- as.numeric(1.75)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
# Creating tables for plotting
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Combining data
prior_data <- rbind(informative_data, weakly_data)
# Plotting informative and weakly informative priors
ggplot(prior_data, aes(x = x, y = y, color = Prior)) +
geom_line (size= 0.5) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
alpha_weakly <- as.numeric(1.66)
beta_weakly <- as.numeric(1.66)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
# Creating tables for plotting
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Combining data
prior_data <- rbind(informative_data, weakly_data)
# Plotting informative and weakly informative priors
ggplot(prior_data, aes(x = x, y = y, color = Prior)) +
geom_line (size= 0.5) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
alpha_weakly <- as.numeric(1.45)
beta_weakly <- as.numeric(1.45)
# Calculate densities for informative and weakly informative priors
y_informative <- dbeta(marks, alpha_informative, beta_informative)
y_weakly <- dbeta(marks, alpha_weakly, beta_weakly)
# Creating tables for plotting
informative_data <- tibble(x = marks, y = y_informative, Prior = "Informative")
weakly_data <- tibble(x = marks, y = y_weakly, Prior = "Weakly-Informative")
# Combining data
prior_data <- rbind(informative_data, weakly_data)
# Plotting informative and weakly informative priors
ggplot(prior_data, aes(x = x, y = y, color = Prior)) +
geom_line (size= 0.5) +
labs(title = "Informative vs. Weakly-Informative Priors",
x = "Proportion",
y = "Density") +
theme_minimal()
rhyming_data <- read.csv('data/rhyming.csv')
library(tidyverse)
library(lme4)
rhyming_data <- read.csv('data/rhyming.csv')
